name: üöÄ Deploy to VM

on:
  push:
    branches:
      - master
  workflow_dispatch: # –ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å –≤—Ä—É—á–Ω—É—é

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Virtual Machine
    
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4
        
      - name: üîë Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          port: ${{ secrets.VM_PORT }}
          script: |
            echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π –Ω–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω–µ..."
            
            # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
            echo "üíæ –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é..."
            BACKUP_DIR="/opt/empalar-mall/backups/$(date +%Y%m%d_%H%M%S)"
            mkdir -p $BACKUP_DIR
            cp -r /opt/empalar-mall/* $BACKUP_DIR/
            
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞
            cd /opt/empalar-mall
            
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
            echo "üì• –ü–æ–ª—É—á–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
            git pull origin master
            
            # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
            echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
            sudo docker-compose down
            sudo docker-compose build --no-cache
            sudo docker-compose up -d
            
            # –ñ–¥–µ–º, –ø–æ–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è
            echo "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
            sleep 30
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å
            echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å..."
            if curl -s -f https://mall.empalar.com > /dev/null; then
              echo "‚úÖ –°–∞–π—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"
              DEPLOY_STATUS="—É—Å–ø–µ—à–Ω–æ"
            else
              echo "‚ùå –°–∞–π—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!"
              DEPLOY_STATUS="—Å –æ—à–∏–±–∫–æ–π"
              
              # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑ –±—ç–∫–∞–ø–∞
              echo "üîÑ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑ –±—ç–∫–∞–ø–∞..."
              cp -r $BACKUP_DIR/* /opt/empalar-mall/
              sudo docker-compose down
              sudo docker-compose up -d
            fi
            
            echo "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω $DEPLOY_STATUS!"
            
      - name: üì¢ Telegram Notification
        if: always()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          format: html
          message: |
            <b>üöÄ –î–µ–ø–ª–æ–π Empalar Mall</b>
            
            <b>–°—Ç–∞—Ç—É—Å:</b> ${{ job.status }}
            <b>–ö–æ–º–º–∏—Ç:</b> ${{ github.sha }}
            <b>–ê–≤—Ç–æ—Ä:</b> ${{ github.actor }}
            
            <b>–ò–∑–º–µ–Ω–µ–Ω–∏—è:</b>
            ${{ github.event.head_commit.message }}
            
            <b>–°—Å—ã–ª–∫–∞:</b>
            <a href="https://mall.empalar.com">mall.empalar.com</a>
            
      - name: üì¢ Notification
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: deployments
          SLACK_COLOR: ${{ job.status }}
          SLACK_TITLE: Deploy to VM
          SLACK_MESSAGE: 'Deploy to VM ${{ job.status }}'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install Dependencies
        run: |
          npm install
          cd client && npm install
          
      - name: Build Frontend
        run: |
          cd client && npm run build
          
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /root/EmpalarMall-WebApp
            git pull origin main
            npm install
            cd client && npm install && npm run build
            pm2 restart all
          ssh_options: |
            -o PubkeyAcceptedKeyTypes=+ssh-rsa
            -o HostKeyAlgorithms=+ssh-rsa 