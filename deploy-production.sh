#!/bin/bash

# –ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω
set -e  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
if [ -z "$1" ]; then
    log_error "–£–∫–∞–∂–∏—Ç–µ –¥–æ–º–µ–Ω!"
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy-production.sh your-domain.com"
    exit 1
fi

DOMAIN=$1
PROJECT_DIR="/opt/empalar-mall"
BACKUP_DIR="/opt/backups/empalar-mall"

log_info "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Empalar Mall –Ω–∞ –¥–æ–º–µ–Ω–µ: $DOMAIN"

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
log_info "üìÅ –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏..."
sudo mkdir -p $PROJECT_DIR
sudo mkdir -p $BACKUP_DIR
sudo mkdir -p /opt/logs/empalar-mall
sudo mkdir -p /opt/ssl

# –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É
log_info "üì¶ –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É..."
sudo apt update && sudo apt upgrade -y

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã
log_info "üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã..."
sudo apt install -y curl wget git nginx certbot python3-certbot-nginx docker.io docker-compose

# –ó–∞–ø—É—Å–∫–∞–µ–º Docker —Å–µ—Ä–≤–∏—Å
log_info "üê≥ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Docker..."
sudo systemctl enable docker
sudo systemctl start docker

# –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É docker
sudo usermod -aG docker $USER

# –ö–ª–æ–Ω–∏—Ä—É–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
if [ -d "$PROJECT_DIR/.git" ]; then
    log_info "üì• –û–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..."
    cd $PROJECT_DIR
    git pull origin master
else
    log_info "üì• –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..."
    sudo git clone https://github.com/Daniil-Bredikhin/EmpalarMall-WebApp.git $PROJECT_DIR
    cd $PROJECT_DIR
fi

# –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if [ ! -f "backend/.env" ]; then
    log_info "‚öôÔ∏è –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    cat > backend/.env << EOF
NODE_ENV=production
PORT=3000
CORS_ORIGIN=https://$DOMAIN
LOG_LEVEL=info
TELEGRAM_WEBAPP_URL=https://$DOMAIN
EOF
fi

# –°–æ–∑–¥–∞–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
log_info "üîê –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç..."
if [ ! -f "/etc/letsencrypt/live/$DOMAIN/fullchain.pem" ]; then
    sudo certbot certonly --standalone -d $DOMAIN -d www.$DOMAIN --non-interactive --agree-tos --email admin@$DOMAIN
fi

# –ö–æ–ø–∏—Ä—É–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
log_info "üìã –ö–æ–ø–∏—Ä—É–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã..."
sudo cp /etc/letsencrypt/live/$DOMAIN/fullchain.pem /opt/ssl/
sudo cp /etc/letsencrypt/live/$DOMAIN/privkey.pem /opt/ssl/
sudo chmod 644 /opt/ssl/fullchain.pem
sudo chmod 600 /opt/ssl/privkey.pem

# –°–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
log_info "üê≥ –°–æ–±–∏—Ä–∞–µ–º Docker –æ–±—Ä–∞–∑—ã..."
sudo docker-compose build --no-cache

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –µ—Å–ª–∏ –µ—Å—Ç—å
log_info "üîÑ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
sudo docker-compose down || true

# –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
log_info "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ..."
sudo docker-compose up -d

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
log_info "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
sleep 30

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
log_info "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
if curl -f http://localhost:3000/api/health > /dev/null 2>&1; then
    log_success "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ!"
else
    log_error "–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è!"
    sudo docker-compose logs
    exit 1
fi

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
log_info "üîÑ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞..."
(crontab -l 2>/dev/null; echo "0 12 * * * /usr/bin/certbot renew --quiet && cp /etc/letsencrypt/live/$DOMAIN/fullchain.pem /opt/ssl/ && cp /etc/letsencrypt/live/$DOMAIN/privkey.pem /opt/ssl/ && docker-compose -f $PROJECT_DIR/docker-compose.yml restart nginx") | crontab -

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
log_info "üìù –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ..."
sudo tee /etc/logrotate.d/empalar-mall << EOF
/opt/logs/empalar-mall/*.log {
    daily
    missingok
    rotate 52
    compress
    delaycompress
    notifempty
    create 644 root root
}
EOF

# –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
log_info "üìä –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
sudo tee /opt/empalar-mall/monitor.sh << 'EOF'
#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

APP_URL="http://localhost:3000/api/health"
LOG_FILE="/opt/logs/empalar-mall/monitor.log"

if ! curl -f $APP_URL > /dev/null 2>&1; then
    echo "$(date): –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º..." >> $LOG_FILE
    cd /opt/empalar-mall
    docker-compose restart app
fi
EOF

sudo chmod +x /opt/empalar-mall/monitor.sh

# –î–æ–±–∞–≤–ª—è–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ cron
(crontab -l 2>/dev/null; echo "*/5 * * * * /opt/empalar-mall/monitor.sh") | crontab -

log_success "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
log_info "üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: https://$DOMAIN"
log_info "üìä –õ–æ–≥–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≤: /opt/logs/empalar-mall/"
log_info "üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: cd $PROJECT_DIR && docker-compose [start|stop|restart|logs]"

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
log_info "üìä –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:"
sudo docker-compose ps 