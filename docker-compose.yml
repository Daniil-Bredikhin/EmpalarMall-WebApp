version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: empalar-mall-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
    env_file:
      - backend/.env
    volumes:
      - ./logs:/app/logs
    networks:
      - empalar-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    build:
      context: .
      dockerfile: nginx.Dockerfile
    container_name: empalar-mall-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./ssl:/etc/nginx/ssl:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
    depends_on:
      - app
    networks:
      - empalar-network

  prometheus:
    image: prom/prometheus:latest
    container_name: empalar-mall-prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - empalar-network

  grafana:
    image: grafana/grafana:latest
    container_name: empalar-mall-grafana
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3001:3000"
    networks:
      - empalar-network
    depends_on:
      - prometheus

  node-exporter:
    image: prom/node-exporter:latest
    container_name: empalar-mall-node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - empalar-network

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: empalar-mall-nginx-exporter
    restart: unless-stopped
    command:
      - -nginx.scrape-uri=http://nginx:80/metrics
    networks:
      - empalar-network

networks:
  empalar-network:
    driver: bridge

volumes:
  logs:
  prometheus_data:
  grafana_data: 